{"version":3,"sources":["./src/app/authentication/components/sign-in/sign-in.component.html","./src/app/authentication/components/sign-up/sign-up.component.html","./src/app/authentication/components/verify-email/verify-email.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/components/sign-in/sign-in.component.css","./src/app/authentication/components/sign-in/sign-in.component.ts","./src/app/authentication/components/sign-up/sign-up.component.css","./src/app/authentication/components/sign-up/sign-up.component.ts","./src/app/authentication/components/verify-email/verify-email.component.css","./src/app/authentication/components/verify-email/verify-email.component.ts","./src/app/authentication/validators/validateUsername.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,uiC;;;;;;;;;;;;ACAf;AAAe,4oBAA6kB,uNAAuN,WAAW,4VAA4V,qmBAAqmB,aAAa,qsBAAqsB,aAAa,8pB;;;;;;;;;;;;ACA99E;AAAe,2zC;;;;;;;;;;;;;;;;;;;;;ACA0B;AACc;AACkB;AACA;AACe;AAGxF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,qFAAe;KAC3C;IACD;QACE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,qFAAe;KAC3C;IACD;QACE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,oGAAoB;KAC3D;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBC;AACM;AACS;AACsB;AACL;AACA;AACpB;AACF;AACI;AACH;AACO;AAC6B;AAmBxF,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAI;AAAxB,oBAAoB;IAjBhC,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,qFAAe;YACf,qFAAe;YACf,qGAAoB;SACrB;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,0FAA2B;YAC3B,kEAAmB;YACnB,gEAAc;YACd,oEAAkB;YAClB,iEAAe;YACf,qEAAgB;YAChB,wEAAe;SAChB;KACF,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;AC9BjC;AAAe,8EAAe,2BAA2B,0BAA0B,aAAa,qBAAqB,8BAA8B,sBAAsB,qBAAqB,6CAA6C,4BAA4B,KAAK,+CAA+C,mwB;;;;;;;;;;;;;;;;;;;;ACAzQ;AACkB;AACP;AACpB;AAOzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAM1B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QALpE,aAAQ,GAAc,IAAI,wDAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;IAEqE,CAAC;IAEzE,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YAC3C,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACtB,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;oBACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;iBACpE;qBAAM,IAAI,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,EAAE;oBACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mCAAmC,CAAC,CAAC,CAAC;iBAC7D;qBAAM;oBACL,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBACrB;YACH,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CAEF;;YApBkC,kEAAW;YAAkB,sDAAM;;AANzD,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,mPAAuC;;KAExC,CAAC;GACW,eAAe,CA0B3B;AA1B2B;;;;;;;;;;;;;ACV5B;AAAe,8EAAe,2BAA2B,0BAA0B,aAAa,qBAAqB,8BAA8B,sBAAsB,qBAAqB,6CAA6C,4BAA4B,KAAK,+CAA+C,mwB;;;;;;;;;;;;;;;;;;;;;;ACAzQ;AACkB;AACA;AAEP;AACM;AAC1B;AAOzC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAY1B,YAAoB,WAAwB,EAAU,cAA8B,EAAU,MAAc;QAAxF,gBAAW,GAAX,WAAW,CAAa;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAX5G,aAAQ,GAAc,IAAI,wDAAS,CAAC;YAClC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,oFAAe,EAAE,CAAC,CAAC;YACvE,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACxG,CAAC,CAAC;QAGH,eAAU,GAAY,IAAI,CAAC;IAEqF,CAAC;IAEjH,QAAQ;QACN,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEK,iBAAiB;;YACrB,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACpE,CAAC;KAAA;IAGD,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;YAC9C,IAAI,EAAE,CAAC,QAAa,EAAE,EAAE;gBACxB,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;oBAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;oBACjD,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;iBACrC;qBAAM;oBACL,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;iBACrB;YACH,CAAC;SACF,CAAC,CAAC;IACH,CAAC;CAEF;;YA1BkC,kEAAW;YAA0B,wEAAc;YAAkB,sDAAM;;AAZjG,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,mPAAuC;;KAExC,CAAC;GACW,eAAe,CAsC3B;AAtC2B;;;;;;;;;;;;;ACb5B;AAAe,4FAA6B,2BAA2B,0BAA0B,KAAK,4BAA4B,8BAA8B,sBAAsB,qBAAqB,6CAA6C,4BAA4B,KAAK,+CAA+C,+yB;;;;;;;;;;;;;;;;;;;;ACA9R;AAC0B;AACR;AACnB;AAOzC,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAK/B,YAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAJpE,qBAAgB,GAAc,IAAI,wDAAS,CAAC;YAC1C,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACnE,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChD,CAAC,CAAC;IACqE,CAAC;IAEzE,MAAM;QACJ,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;QACxD,IAAI,mBAAmB,CAAC,KAAK,EAAE;YAC7B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC;gBACzD,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;oBACjB,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;wBAChC,KAAK,CAAC,uFAAuF,CAAC;wBAC9F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC;qBAClD;yBAAM;wBACL,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;4BACjE,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gCACjB,IAAI,QAAQ,IAAI,QAAQ,CAAC,OAAO,EAAE;oCAChC,KAAK,CAAC,yCAAyC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC;iCAC7E;4BACH,CAAC;yBACF,CAAC,CAAC;qBACJ;gBACH,CAAC;aACF,CAAC,CAAC;SACJ;aAAM;YACL,KAAK,CAAC,mEAAmE,CAAC,CAAC;SAC5E;IACH,CAAC;CACF;;YAzBkC,yEAAW;YAAkB,sDAAM;;AALzD,oBAAoB;IALhC,+DAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,kQAA4C;;KAE7C,CAAC;GACW,oBAAoB,CA8BhC;AA9BgC;;;;;;;;;;;;;;;;;ACR1B,SAAS,eAAe;IAC3B,OAAO,UAAS,OAAwB;QACpC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YACpC,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE;SAC7B;QAAA,CAAC;QACF,OAAO,IAAI,CAAC;IAChB,CAAC,CAAC;AACN,CAAC","file":"authentication-authentication-module-es2015.js","sourcesContent":["export default \"<div class=\\\"form-wrapper\\\">\\n    <form [formGroup]=\\\"userData\\\" (ngSubmit)=\\\"login()\\\" class=\\\"signin-form\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Username</mat-label>\\n            <input matInput type=\\\"username\\\" id=\\\"username\\\" formControlName=\\\"username\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['username']['errors']?.required\\\">\\n                * Please enter a username\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Password</mat-label>\\n            <input matInput type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['password']['errors']?.required\\\">\\n                * Please enter a password\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Sign In</button>\\n    </form>\\n</div>\"","export default \"<div class=\\\"form-wrapper\\\">\\n    <form [formGroup]=\\\"userData\\\" (ngSubmit)=\\\"register()\\\" class=\\\"signup-form\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Full Name</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"fullName\\\" formControlName=\\\"fullName\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['fullName']['errors']?.required\\\">\\n                <p>* Please enter your full name</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"margin-bottom: 8px;\\\">\\n            <mat-label>Country</mat-label>\\n            <mat-select formControlName=\\\"country\\\">\\n                <mat-option *ngFor=\\\"let country of countriesList\\\" [value]=\\\"country\\\">\\n                    {{ country }}\\n                </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"userData.controls['country']['errors']\\\">\\n                <p>* Please select your country from the list</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"height: 100px !important;\\\">\\n            <mat-label>Email</mat-label>\\n            <input matInput type=\\\"email\\\" id=\\\"email\\\" formControlName=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['email']?.invalid\\\">\\n                <p>* Please enter a valid email address</p>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userData.controls['email']['errors']?.required\\\">\\n                <p>* Please enter your email address</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <br>\\n        <br>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"height: 150px !important; margin: 1px;\\\">\\n            <mat-label>Username</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"username\\\" formControlName=\\\"username\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['username']['errors']?.required\\\">\\n                <p>* Please enter a username so that other users can interact with you</p>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userData.controls['username']['errors']?.invalid\\\">\\n                <p>* Your username must be 6-12 characters long\\n                    and it can only consist of alphanumeric characters</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" style=\\\"height: 150px !important; margin: 1px;\\\">\\n            <mat-label>Password</mat-label>\\n            <input matInput type=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\" required>\\n            <mat-error *ngIf=\\\"userData.controls['password']['errors']?.required\\\">\\n                <p>* Please enter a password</p>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"userData.controls['password']['errors']\\\">\\n                <p>* Your password must be 8-20 characters long</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <br>\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" [disabled]=\\\"!notClicked\\\">Sign Up</button>\\n    </form>\\n</div>\"","export default \"<div class=\\\"verification-form-wrapper\\\">\\n    <form [formGroup]=\\\"verificationData\\\" (ngSubmit)=\\\"verify()\\\" class=\\\"verification-form\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Email</mat-label>\\n            <input matInput type=\\\"text\\\" id=\\\"email\\\" formControlName=\\\"email\\\" required>\\n            <mat-error *ngIf=\\\"verificationData.controls['email']['errors']?.required\\\">\\n                <p>* Please enter the email address you have signed up with</p>\\n            </mat-error>\\n            <mat-error *ngIf=\\\"verificationData.controls['email'].invalid\\\">\\n                <p>* Please enter a valid email</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Verification Token</mat-label>\\n            <input matInput type=\\\"password\\\" id=\\\"token\\\" formControlName=\\\"token\\\" required>\\n            <mat-error *ngIf=\\\"verificationData.controls['token']['errors']?.required\\\">\\n                <p>* Please enter the token that has been sent to your email</p>\\n            </mat-error>\\n        </mat-form-field>\\n        <br>\\n        <br>\\n        <br>\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\">Verify</button>\\n    </form>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'signup', component: SignUpComponent\n  },\n  {\n    path: 'signin', component: SignInComponent\n  },\n  {\n    path: 'emailverification', component: VerifyEmailComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatSelectModule } from '@angular/material/select';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\n\n@NgModule({\n  declarations: [\n    SignInComponent,\n    SignUpComponent,\n    VerifyEmailComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatSelectModule\n  ]\n})\nexport class AuthenticationModule { }\n","export default \".form-wrapper{\\r\\n    text-align: center;\\r\\n    padding-top: 30px;\\r\\n    \\r\\n}\\r\\n\\r\\n.signin-form{\\r\\n    display: inline-block;\\r\\n    padding: 30px;\\r\\n    width: 600px;\\r\\n    background-color: rgb(199, 198, 198);\\r\\n    border-radius: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9zaWduLWluL3NpZ24taW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7O0FBRXJCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYixZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS13cmFwcGVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbiAgICBcclxufVxyXG5cclxuLnNpZ25pbi1mb3Jte1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogMzBweDtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTksIDE5OCwgMTk4KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n  userData: FormGroup = new FormGroup({\n    username: new FormControl('', Validators.required),\n    password: new FormControl('', Validators.required)\n  });\n  user: { username: string, password: string };\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.user = this.userData.value;\n    this.authService.signIn(this.user).subscribe({\n      next: (response: any) => {\n        if (response && response.user && response.user.isVerified) {\n            this.router.navigate(['/']).then(() => window.location.reload());\n        } else if (response.user && !response.user.isVerified) {\n          this.router.navigate(['/authentication/emailverification']);\n        } else {\n          alert(response.msg);\n        }\n      }\n    });\n  }\n\n}\n","export default \".form-wrapper{\\r\\n    text-align: center;\\r\\n    padding-top: 30px;\\r\\n    \\r\\n}\\r\\n\\r\\n.signup-form{\\r\\n    display: inline-block;\\r\\n    padding: 30px;\\r\\n    width: 600px;\\r\\n    background-color: rgb(199, 198, 198);\\r\\n    border-radius: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy9zaWduLXVwL3NpZ24tdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7O0FBRXJCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYixZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvc2lnbi11cC9zaWduLXVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS13cmFwcGVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbiAgICBcclxufVxyXG5cclxuLnNpZ251cC1mb3Jte1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogMzBweDtcclxuICAgIHdpZHRoOiA2MDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxOTksIDE5OCwgMTk4KTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { isValidUsername } from '../../validators/validateUsername';\nimport { User } from '../../../interfaces/user';\nimport { AuthService } from '../../../services/auth.service';\nimport { CountryService } from '../../../services/country.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n  userData: FormGroup = new FormGroup({\n    fullName: new FormControl('', Validators.required),\n    username: new FormControl('', [Validators.required, isValidUsername()]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    country: new FormControl('', Validators.required),\n    password: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(20)])\n  });\n  newUser: User;\n  countriesList: Array<{}>;\n  notClicked: boolean = true;\n\n  constructor(private authService: AuthService, private countryService: CountryService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getCountriesNames();\n  }\n\n  async getCountriesNames(): Promise<any> {\n    this.countriesList = await this.countryService.getCountriesList();\n  }\n\n\n  register() {\n    this.notClicked = false;\n    this.newUser = this.userData.value;\n    this.authService.signUp(this.newUser).subscribe({\n      next: (response: any) => {\n      if (response && response.success) {\n        this.router.navigate(['/authentication/signin']);\n        alert(JSON.stringify(response.msg));\n      } else {\n        alert(response.msg);\n      }\n    }\n  });\n  }\n\n}\n","export default \".verification-form-wrapper {\\r\\n    text-align: center;\\r\\n    padding-top: 30px;\\r\\n}\\r\\n\\r\\n.verification-form {\\r\\n    display: inline-block;\\r\\n    padding: 30px;\\r\\n    width: 600px;\\r\\n    background-color: rgb(199, 198, 198);\\r\\n    border-radius: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vY29tcG9uZW50cy92ZXJpZnktZW1haWwvdmVyaWZ5LWVtYWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYixZQUFZO0lBQ1osb0NBQW9DO0lBQ3BDLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2NvbXBvbmVudHMvdmVyaWZ5LWVtYWlsL3ZlcmlmeS1lbWFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZlcmlmaWNhdGlvbi1mb3JtLXdyYXBwZXIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZy10b3A6IDMwcHg7XHJcbn1cclxuXHJcbi52ZXJpZmljYXRpb24tZm9ybSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgd2lkdGg6IDYwMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5OSwgMTk4LCAxOTgpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent {\n  verificationData: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    token: new FormControl('', Validators.required)\n  });\n  constructor(private authService: AuthService, private router: Router) { }\n\n  verify() {\n    const verificationReqBody = this.verificationData.value;\n    if (verificationReqBody.token) {\n      this.authService.verifyUser(verificationReqBody).subscribe({\n        next: (response) => {\n          if (response && response.success) {\n            alert('Congratulations! Your email has been verified! Now you can sign in and enjoy the game')\n            this.router.navigate(['/authentication/signin']);\n          } else {\n            this.authService.reverifyUser(verificationReqBody.email).subscribe({\n              next: (response) => {\n                if (response && response.success) {\n                  alert(`A verification email has been sent to ${verificationReqBody.email}`);\n                }\n              }\n            });\n          }\n        }\n      });\n    } else {\n      alert('Please complete at least the email field to recieve another token');\n    }\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport function isValidUsername(): ValidatorFn {\r\n    return function(control: AbstractControl): { [key: string]: Boolean } | null {\r\n        if (!control.value.match(/^\\w{6,12}/g)) {\r\n            return { 'invalid': true }\r\n        };\r\n        return null;\r\n    };\r\n}"],"sourceRoot":"webpack:///"}